// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9XM4zeTVVyXosWSTzSvkg2
// Component: eijKd-XB1Gi1

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import FloatingMenu from "../../FloatingMenu"; // plasmic-import: 4mFHf-oFerNL/component
import Header from "../../Header"; // plasmic-import: bBEpEb60SKxb/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import FollowUs from "../../FollowUs"; // plasmic-import: ewnk8ZUxnW_n/component
import Footer from "../../Footer"; // plasmic-import: g5tc5CVcyBLV/component

import { useScreenVariants as useScreenVariantsczuL3NBhJd9 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: CzuL3-nBhJd9/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 9XM4zeTVVyXosWSTzSvkg2/projectcss
import sty from "./PlasmicContactUs.module.css"; // plasmic-import: eijKd-XB1Gi1/css

createPlasmicElementProxy;

export type PlasmicContactUs__VariantMembers = {};
export type PlasmicContactUs__VariantsArgs = {};
type VariantPropType = keyof PlasmicContactUs__VariantsArgs;
export const PlasmicContactUs__VariantProps = new Array<VariantPropType>();

export type PlasmicContactUs__ArgsType = {};
type ArgPropType = keyof PlasmicContactUs__ArgsType;
export const PlasmicContactUs__ArgProps = new Array<ArgPropType>();

export type PlasmicContactUs__OverridesType = {
  contact?: Flex__<"div">;
  floatingMenu?: Flex__<typeof FloatingMenu>;
  header?: Flex__<typeof Header>;
  hero?: Flex__<"section">;
  mobileHero?: Flex__<"section">;
  followUs?: Flex__<typeof FollowUs>;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultContactUsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicContactUs__RenderFunc(props: {
  variants: PlasmicContactUs__VariantsArgs;
  args: PlasmicContactUs__ArgsType;
  overrides: PlasmicContactUs__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "floatingMenu.plasmicAntd5SingleCollapseOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsczuL3NBhJd9()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicContactUs.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicContactUs.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicContactUs.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicContactUs.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicContactUs.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicContactUs.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicContactUs.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicContactUs.pageMetadata.ogImageSrc}
        />
        <link rel="canonical" href={PlasmicContactUs.pageMetadata.canonical} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"contact"}
          data-plasmic-override={overrides.contact}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.contact
          )}
        >
          <FloatingMenu
            data-plasmic-name={"floatingMenu"}
            data-plasmic-override={overrides.floatingMenu}
            className={classNames("__wab_instance", sty.floatingMenu)}
            onPlasmicAntd5SingleCollapseOpenChange={generateStateOnChangeProp(
              $state,
              ["floatingMenu", "plasmicAntd5SingleCollapseOpen"]
            )}
          />

          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <section
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__a7Bac)}>
              <div className={classNames(projectcss.all, sty.freeBox__dAepf)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bUkuR
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#F2F2F2" }}
                    >
                      {"Contact us"}
                    </span>
                  </React.Fragment>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__frlwf)} />
            </div>
          </section>
          <section
            data-plasmic-name={"mobileHero"}
            data-plasmic-override={overrides.mobileHero}
            className={classNames(projectcss.all, sty.mobileHero)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__fFjiJ)}>
              <div className={classNames(projectcss.all, sty.freeBox___2P1Gm)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__guTjM
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#F2F2F2" }}
                    >
                      {"Contact Us"}
                    </span>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__dYuR)}>
            <div className={classNames(projectcss.all, sty.columns___78Z6E)}>
              <div className={classNames(projectcss.all, sty.column__mvEyr)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vfuP3
                  )}
                >
                  {"Email"}
                </div>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__yRCk0
                  )}
                  component={Link}
                  href={"mailto:elegant-ink@outlook.com"}
                  platform={"nextjs"}
                >
                  {"elegant-ink@outlook.com"}
                </PlasmicLink__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xGdI1
                  )}
                >
                  {"Phone"}
                </div>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__wl2Dl
                  )}
                  component={Link}
                  href={"tel:0401639382"}
                  platform={"nextjs"}
                >
                  {"0401 639 382"}
                </PlasmicLink__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mtoY
                  )}
                >
                  {"Address"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yFSs
                  )}
                >
                  {"Unit 7/70 Sackville St, \nIngleburn NSW 2565"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column___2E5Zb)}>
                <Embed
                  className={classNames("__wab_instance", sty.embedHtml__sLBf)}
                  code={
                    '<iframe src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d826.7902251728909!2d150.86634433187706!3d-34.014080623283405!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x6b12eb004e62e8fd%3A0xe79a789ad1d0947d!2sElegant%20Ink!5e0!3m2!1sen!2sau!4v1722569221843!5m2!1sen!2sau" width="520" height="370" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>'
                  }
                />
              </div>
            </div>
          </section>
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
          ) ? (
            <section className={classNames(projectcss.all, sty.section__hx0Fh)}>
              <div className={classNames(projectcss.all, sty.columns__jIzP1)}>
                <div className={classNames(projectcss.all, sty.column__qrGUx)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5PFi
                    )}
                  >
                    {"Email"}
                  </div>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__qhHf2
                    )}
                    component={Link}
                    href={"mailto:elegant-ink@outlook.com"}
                    platform={"nextjs"}
                  >
                    {"elegant-ink@outlook.com"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1HBZ
                    )}
                  >
                    {"Phone"}
                  </div>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__cut8R
                    )}
                    component={Link}
                    href={"tel:0401639382"}
                    platform={"nextjs"}
                  >
                    {"0401 639 382"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dgNds
                    )}
                  >
                    {"Address"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2K6Aw
                    )}
                  >
                    {"Unit 7/70 Sackville St, \nIngleburn NSW 2565"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__kKcCc)}>
                  <Embed
                    className={classNames(
                      "__wab_instance",
                      sty.embedHtml__xYpPc
                    )}
                    code={
                      '<iframe src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d826.7902251728909!2d150.86634433187706!3d-34.014080623283405!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x6b12eb004e62e8fd%3A0xe79a789ad1d0947d!2sElegant%20Ink!5e0!3m2!1sen!2sau!4v1722569221843!5m2!1sen!2sau" width="350" height="390" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>'
                    }
                  />
                </div>
              </div>
            </section>
          ) : null}
          <section className={classNames(projectcss.all, sty.section__wzEpt)}>
            <div className={classNames(projectcss.all, sty.freeBox__nGkm2)}>
              <Embed
                className={classNames("__wab_instance", sty.embedHtml__yk1Ty)}
                code={
                  '<iframe src="https://docs.google.com/forms/d/e/1FAIpQLScIPRoo33lUPsIqbHHrIeCEF5iIzVW_qVSnzgQz68oQkvEoIw/formResponse?embedded=true" width="700" height="950px" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>\r\n\r\n'
                }
              />
            </div>
          </section>
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
          ) ? (
            <section className={classNames(projectcss.all, sty.section__hUjk1)}>
              <div className={classNames(projectcss.all, sty.freeBox__ti5Av)}>
                <Embed
                  className={classNames("__wab_instance", sty.embedHtml__ssf5A)}
                  code={
                    '<iframe src="https://docs.google.com/forms/d/e/1FAIpQLScIPRoo33lUPsIqbHHrIeCEF5iIzVW_qVSnzgQz68oQkvEoIw/formResponse?embedded=true" width="380" height="950px" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>\r\n\r\n'
                  }
                />
              </div>
            </section>
          ) : null}
          <FollowUs
            data-plasmic-name={"followUs"}
            data-plasmic-override={overrides.followUs}
            className={classNames("__wab_instance", sty.followUs)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  contact: [
    "contact",
    "floatingMenu",
    "header",
    "hero",
    "mobileHero",
    "followUs",
    "footer"
  ],
  floatingMenu: ["floatingMenu"],
  header: ["header"],
  hero: ["hero"],
  mobileHero: ["mobileHero"],
  followUs: ["followUs"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  contact: "div";
  floatingMenu: typeof FloatingMenu;
  header: typeof Header;
  hero: "section";
  mobileHero: "section";
  followUs: typeof FollowUs;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicContactUs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicContactUs__VariantsArgs;
    args?: PlasmicContactUs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicContactUs__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicContactUs__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicContactUs__ArgProps,
          internalVariantPropNames: PlasmicContactUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicContactUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "contact") {
    func.displayName = "PlasmicContactUs";
  } else {
    func.displayName = `PlasmicContactUs.${nodeName}`;
  }
  return func;
}

export const PlasmicContactUs = Object.assign(
  // Top-level PlasmicContactUs renders the root element
  makeNodeComponent("contact"),
  {
    // Helper components rendering sub-elements
    floatingMenu: makeNodeComponent("floatingMenu"),
    header: makeNodeComponent("header"),
    hero: makeNodeComponent("hero"),
    mobileHero: makeNodeComponent("mobileHero"),
    followUs: makeNodeComponent("followUs"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicContactUs
    internalVariantProps: PlasmicContactUs__VariantProps,
    internalArgProps: PlasmicContactUs__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Elegant Ink - Contact Us",
      description:
        "At Elegant Ink, we are dedicated to providing high-quality permanent makeup services that enhance your natural beauty and boost your confidence.",
      ogImageSrc:
        "https://site-assets.plasmic.app/f5460de3c47373fc7c1b77c39e4e4905.png",
      canonical: "https://elegantink.au/"
    }
  }
);

export default PlasmicContactUs;
/* prettier-ignore-end */
